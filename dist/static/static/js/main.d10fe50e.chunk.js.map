{"version":3,"sources":["lib.js","Notification.js","AuthForm.js","Server.js","ServerCtn.js","App.js","index.js"],"names":["makeCancelable","promise","hasCanceled_","Promise","resolve","reject","then","val","isCanceled","error","cancel","curKey","Notification","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","state","messages","hide","getKey","bind","assertThisInitialized","tempKey","setState","remove","keyVal","message","react_default","a","createElement","key","className","status","text","msg","onClick","Component","AuthForm","username","password","notifications","loading","changeHandler","handleSubmit","close","addNotification","removeNotification","e","field","defineProperty","target","value","preventDefault","_this$state","actionCallback","notification","console","log","newNotifications","concat","notificationKey","filter","el","_this2","map","Notification_Notification","onSubmit","method","authFormHeading","style","textAlign","react_spinners","sizeUnit","size","color","htmlFor","name","type","onChange","Server","online","info","mac","ip","pingURL","shutdownURL","restartURL","startURL","ping","startServer","shutdownServer","restartServer","pendingPromises","toConsumableArray","p","times","undefined","pendingPing","fetch","appendPendingPromise","res","json","removePendingPromise","catch","_this3","pendingStart","packetSent","form","_this4","pendingShutdown","headers","Accept","Content-Type","body","JSON","stringify","err","_this5","pendingRestart","_this6","join","showAuthForm","disabled","ServerCtn","servers","length","server","Server_Server","LogBtn","App","user","modalDisplay","hideAuthForm","logIn","logOut","getUserData","getServerData","pendingUser","pendingServer","heading","modalAction","pendingLogin","pendingLogout","alert","ServerCtn_ServerCtn","AuthForm_AuthForm","ReactDOM","render","src_App_0","document","getElementById"],"mappings":"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","file":"static/js/main.d10fe50e.chunk.js","sourcesContent":["export const makeCancelable = (promise) => {\n  let hasCanceled_ = false;\n\n  const wrappedPromise = new Promise((resolve, reject) => {\n    promise.then(\n      val => hasCanceled_ ? reject({isCanceled: true}) : resolve(val),\n      error => hasCanceled_ ? reject({isCanceled: true}) : reject(error)\n    );\n  });\n\n  return {\n    promise: wrappedPromise,\n    cancel() {\n      hasCanceled_ = true;\n    },\n  };\n};\n\nexport function appendPendingPromise(promise) {\n  this.pendingPromises = [...this.pendingPromises, promise];\n}\n\nexport function removePendingPromise(promise) {\n  this.pendingPromises = this.pendingPromises.filter(p => p !== promise);\n}\n","import React, { Component } from 'react';\n\nlet curKey = 0;\n\nexport default class Notification extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      curKey: 0,\n      messages: [],\n      hide: false,\n    }\n\n    this.getKey = this.getKey.bind(this);\n    this.hide = this.hide.bind(this);\n  }\n\n  /**\n   * getKey - Generates a unique key for an item. Essentially just iterates the\n   *  curKey and returns the new one.\n   *\n   * @returns {Number} The new key.\n   */\n  getKey() {\n    const tempKey = curKey;\n    curKey++;\n    return tempKey;\n  }\n\n  hide() {\n    this.setState({ hide: true });\n    if (this.props.remove) this.props.remove(this.props.keyVal);\n  }\n\n  render() {\n    const { message } = this.props;\n    if (!message || this.state.hide) return null;\n    return (\n      <div key={this.getKey()} className={message.status}>\n        {\n          message.text\n          ? message.text\n          : message.msg\n        }\n        <button onClick={this.hide}>X</button>\n      </div>\n    );\n  }\n\n}\n","import React, { Component } from 'react';\nimport { ClipLoader } from 'react-spinners';\n\nimport Notification from './Notification';\n\nlet curKey = 0;\n\nfunction getKey() {\n  return curKey++;\n}\n\nexport default class AuthForm extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      username: '',\n      password: '',\n      notifications: [],\n      loading: false,\n    }\n\n    this.changeHandler = this.changeHandler.bind(this);\n    this.handleSubmit = this.handleSubmit.bind(this);\n    this.close = this.close.bind(this);\n    this.addNotification = this.addNotification.bind(this);\n    this.removeNotification = this.removeNotification.bind(this);\n  }\n\n  changeHandler(e, field) {\n    this.setState({\n      [field]: e.target.value\n    });\n  }\n\n  handleSubmit(e) {\n    e.preventDefault();\n    const { username, password } = this.state;\n    this.setState({\n      username: '',\n      password: '',\n      loading: true,\n      notifications: [],\n    });\n    this.props.actionCallback(username, password, this);\n  }\n\n  addNotification(notification) {\n    console.log(notification);\n    const newNotifications = this.state.notifications.concat({\n      status: notification.status,\n      text: notification.msg,\n      keyVal: getKey(),\n    });\n    this.setState({ notifications: newNotifications, loading: false });\n  }\n\n  removeNotification(notificationKey) {\n    const newNotifications = this.state.notifications.filter(el => el.keyVal === notificationKey);\n    this.setState({\n      notifications: newNotifications,\n    });\n  }\n\n  /**\n   * close - Closes the authForm\n   *\n   */\n  close() {\n    this.setState({\n      loading: false\n    });\n    this.props.close();\n  }\n\n  render() {\n    const notifications = this.state.notifications.map((msg) => {\n      return <Notification key={msg.keyVal} message={msg} remove={this.removeNotification}/>\n    });\n    return (\n      <form className=\"authform\" onSubmit={this.handleSubmit} method={this.props.method}>\n        <h2>{this.props.authFormHeading}</h2>\n        {\n          this.state.loading\n          ? <div style={{textAlign: 'center'}}><ClipLoader sizeUnit={'em'} size={5} color={'#476da4'}/></div>\n          :\n          <div>\n            <div className=\"notification\">\n              { notifications }\n            </div>\n            <p>Please enter your credentials for your server.</p>\n            <label htmlFor=\"username\">Username:</label>\n            <input name=\"username\" type=\"text\" value={this.state.username} onChange={(e) => this.changeHandler(e, 'username')} />\n            <label htmlFor=\"password\">Password:</label>\n            <input name=\"password\" type=\"password\" value={this.state.password} onChange={(e) => this.changeHandler(e, 'password')} />\n            <input type=\"submit\" value=\"Submit\" />\n            <button onClick={this.props.close}>Cancel</button>\n          </div>\n        }\n      </form>\n    )\n  }\n}\n","import React, { Component } from 'react';\nimport { ClipLoader } from 'react-spinners';\nimport Notification from './Notification';\n\nimport { makeCancelable } from './lib.js';\n\nimport './App.css';\n\n\nconst spinnerCSS = `\n  margin: 0;\n`\nlet curKey = 0;\n\nfunction getKey() {\n  return curKey++;\n}\n\nexport default class Server extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      status: 'Offline',\n      online: false,\n      loading: props.loading,\n      notifications: [],\n    }\n\n    this.name = this.props.info.name;\n    this.mac = this.props.info.mac;\n    this.ip = this.props.info.ip;\n    this.pingURL = `/api/ping/${this.ip}`;\n    this.shutdownURL = `/api/shutdown/${this.ip}`;\n    this.restartURL = `/api/restart/${this.ip}`;\n    this.startURL = `/api/start/${this.mac}`;\n\n    this.ping = this.ping.bind(this);\n    this.startServer = this.startServer.bind(this);\n    this.addNotification = this.addNotification.bind(this);\n    this.shutdownServer = this.shutdownServer.bind(this);\n    this.restartServer = this.restartServer.bind(this);\n\n    this.pendingPromises = [];\n  }\n\n  /**\n   * addNotification - Adds a new notification to state.\n   *\n   * @param {Object} notification An object representing the notification. Must\n   *  have a status property ('success', 'error', or 'info') and a text property.\n   *\n   */\n  addNotification(notification) {\n    notification.key = getKey();\n    const newNotifications = this.state.notifications.concat(notification);\n    this.setState({ notifications: newNotifications });\n  }\n\n  removeNotification(notificationKey) {\n    const newNotifications = this.state.notifications.filter(el => el.keyVal === notificationKey);\n    this.setState({\n      notifications: newNotifications,\n    });\n  }\n\n  appendPendingPromise(promise) {\n    this.pendingPromises = [...this.pendingPromises, promise];\n  }\n\n  removePendingPromise(promise) {\n    this.pendingPromises = this.pendingPromises.filter(p => p !== promise);\n  }\n\n\n  componentDidMount() {\n    this.ping();\n  }\n\n  componentWillUnmount() {\n    this.pendingPromises.map(promise => promise.cancel());\n  }\n\n  /**\n   * ping - Sends a ping to the server and updates state accordingly.\n   *\n   * @param {Number} times The number of times to try to ping before giving up.\n   *\n   */\n  ping(times) {\n    if (times === undefined) times = 3;\n    this.setState({ loading: true });\n    const pendingPing = makeCancelable(fetch(this.pingURL));\n\n    this.appendPendingPromise(pendingPing);\n\n    pendingPing.promise\n    .then(res => res.json())\n    .then((res) => {\n      if (!res.online && times > 0) return this.ping(times - 1);\n      this.addNotification({\n        status: res.online ? 'success' : 'error',\n        text: res.msg,\n      });\n      this.removePendingPromise(pendingPing);\n      this.setState({ loading: false, status: res.status, online: res.online });\n    })\n    .catch((error) => {\n      this.removePendingPromise(pendingPing);\n    });\n  }\n\n  /**\n   * startServer - Starts the server.\n   *\n   * @returns {type} Description\n   */\n  startServer() {\n    this.setState({ loading: true });\n    const pendingStart = makeCancelable(fetch(this.startURL));\n    this.appendPendingPromise(pendingStart);\n\n    pendingStart.promise\n      .then(res => res.json())\n      .then((res) => {\n        this.removePendingPromise(pendingStart);\n        this.addNotification({\n          status: res.packetSent ? 'info' : 'error',\n          text: res.msg,\n        });\n        this.ping(25);\n      })\n      .catch((error) => {\n        this.removePendingPromise(pendingStart);\n      });\n  }\n\n  /**\n   * shutdownServer - Shuts down the server.\n   *\n   */\n  shutdownServer(username, password, form) {\n    const pendingShutdown = makeCancelable(\n      fetch(this.shutdownURL, {\n        headers: {\n          'Accept': 'application/json, text/plain, */*',\n          'Content-Type': 'application/json'\n        },\n        method: 'POST',\n        body: JSON.stringify({ username, password }),\n      })\n    );\n\n    this.appendPendingPromise(pendingShutdown);\n\n    pendingShutdown.promise\n    .then(res => res.json())\n    .then(res => {\n      this.removePendingPromise(pendingShutdown);\n      this.addNotification({\n        status: res.status,\n        text: res.msg,\n      });\n      form.close();\n    })\n    .catch((err) => {\n      this.removePendingPromise(pendingShutdown);\n      form.addNotification({\n        status: 'error',\n        msg: 'Unable to shutdown server',\n      });\n    });\n  }\n\n  /**\n   * restartServer - Restarts the server.\n   *\n   * @param {type} username Description\n   * @param {type} password Description\n   *\n   * @returns {type} Description\n   */\n  restartServer(username, password, form) {\n    const pendingRestart = makeCancelable(\n      fetch(this.restartURL, {\n        headers: {\n          'Accept': 'application/json, text/plain, */*',\n          'Content-Type': 'application/json'\n        },\n        method: 'POST',\n        body: JSON.stringify({ username, password }),\n      })\n    );\n\n    this.appendPendingPromise(pendingRestart);\n\n    pendingRestart.promise\n    .then(res => res.json())\n    .then(res => {\n      this.removePendingPromise(pendingRestart);\n      this.addNotification({\n        status: res.status,\n        text: res.msg,\n      });\n      form.close();\n    })\n    .catch((err) => {\n      this.removePendingPromise(pendingRestart);\n      form.addNotification({\n        status: 'error',\n        msg: 'Unable to restart server.',\n      });\n    });\n  }\n\n\n  render() {\n    const info = this.state;\n    if (!info) return null;\n    const messages = this.state.notifications.map((msg) => {\n      return <Notification key={msg.key} message={msg} />\n    });\n    return (\n      <div className=\"hover-card\">\n        <h2>{this.name}</h2>\n        <div className=\"notification\">\n          {messages}\n        </div>\n        <table>\n          <tbody>\n            <tr>\n              <th>Status:</th>\n              <td>\n                {\n                  this.state.loading\n                  ? <ClipLoader className={spinnerCSS} sizeUnit={'em'} size={1} color={'#476da4'}/>\n                : <span className={ ['status-ctn', info.status].join(' ') }>{info.status} <button onClick={this.ping}>Check Status</button></span>\n                }\n              </td>\n            </tr>\n            <tr>\n              <th>MAC:</th><td>{this.mac}</td>\n            </tr>\n            <tr>\n              <th>IP:</th><td>{this.ip}</td>\n            </tr>\n          </tbody>\n        </table>\n        <div className=\"btn-ctn\">\n          {\n            info.online\n            ? <span><button onClick={() => this.props.showAuthForm('Restart Server', this.restartServer)} disabled={this.state.loading}>Restart</button><button onClick={() => this.props.showAuthForm('Shutdown Server', this.shutdownServer)} disabled={this.state.loading}>Shut Down</button></span>\n            : <button disabled={this.state.loading} onClick={this.startServer}>Start</button>\n          }\n\n        </div>\n      </div>\n    )\n  }\n}\n","import React, { Component } from 'react';\nimport Server from './Server.js';\n\nexport default class ServerCtn extends Component {\n  render() {\n    if (!this.props.servers || this.props.servers.length < 1) return null;\n    return (\n      <div>\n        {\n          this.props.servers.map((server) => {\n            return <Server key={server.mac} showAuthForm={this.props.showAuthForm} info={server} />\n          })\n        }\n      </div>\n    );\n  }\n}\n","import React, { Component } from 'react';\n\nimport { makeCancelable, appendPendingPromise, removePendingPromise } from './lib.js';\n\nimport AuthForm from './AuthForm.js';\nimport ServerCtn from './ServerCtn.js';\n\nimport './App.css';\n\nfunction LogBtn(props) {\n  return (\n    <button className={'logbtn'} onClick={props.onClick}>{props.text}</button>\n  )\n}\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      user: null,\n      modalDisplay: false,\n      servers: [],\n    };\n    this.showAuthForm = this.showAuthForm.bind(this);\n    this.hideAuthForm = this.hideAuthForm.bind(this);\n    this.logIn = this.logIn.bind(this);\n    this.logOut = this.logOut.bind(this);\n\n    this.pendingPromises = [];\n    this.appendPendingPromise = appendPendingPromise.bind(this);\n    this.removePendingPromise = removePendingPromise.bind(this);\n  }\n\n  componentDidMount() {\n    this.getUserData();\n    this.getServerData();\n  }\n\n  // componentWillUnmoutn}\n\n  getUserData() {\n    const pendingUser = makeCancelable(fetch('/api/user'));\n\n    this.appendPendingPromise(pendingUser);\n\n    pendingUser.promise\n      .then(res => res.json())\n      .then((res) => {\n        if (res.status !== 'error') {\n          this.removePendingPromise(pendingUser);\n          this.setState({\n            user: res,\n          });\n        }\n      })\n      .catch(() => this.removePendingPromise(pendingUser));\n  }\n\n  getServerData() {\n    const pendingServer = makeCancelable(fetch('/api/servers'));\n\n    this.appendPendingPromise(pendingServer);\n\n    pendingServer.promise\n      .then(res => res.json())\n      .then((res) => {\n        this.removePendingPromise(pendingServer);\n        if (res.status !== 'error') {\n          this.setState({\n            servers: res,\n          });\n        }\n      })\n      .catch((error) => {\n        this.removePendingPromise(pendingServer);\n        this.setState({ servers: [] });\n      });\n  }\n\n  /**\n   * showAuthForm - Show the authorization form.\n   *\n   * @param {Function} actionCallback The function to call on submit.\n   *\n   */\n  showAuthForm(heading, actionCallback) {\n    const authFormHeading = heading ? heading : 'Authorization Required';\n    this.setState({\n      modalDisplay: true,\n      modalAction: actionCallback,\n      authFormHeading,\n    });\n  }\n\n  hideAuthForm() {\n    this.setState({\n      modalDisplay: false,\n    });\n  }\n\n  logIn() {\n    this.showAuthForm('Log In', (username, password, form) => {\n      const pendingLogin = makeCancelable(\n        fetch('/api/user/login', {\n          headers: {\n            'Accept': 'application/json, text/plain, */*',\n            'Content-Type': 'application/json'\n          },\n          method: 'POST',\n          body: JSON.stringify({ username, password }),\n        })\n      );\n\n      this.appendPendingPromise(pendingLogin);\n\n      pendingLogin.promise\n      .then(res => res.json())\n      .then((res) => {\n        if (res.status === 'error') {\n          console.log('error');\n          return form.addNotification(res);\n        }\n        this.setState({ user: res.user });\n        this.getServerData();\n        form.close();\n      })\n      .catch((err) => {\n        form.addNotification(err);\n      });\n    });\n  }\n\n  logOut() {\n    const pendingLogout = makeCancelable(fetch('/api/user/logout'));\n\n    this.appendPendingPromise(pendingLogout);\n\n    pendingLogout.promise\n    .then(res => res.json())\n    .then((res) => {\n      if (res.status === 'success') {\n        this.setState({ user: null });\n      } else {\n        console.log(res);\n        alert('Unable to log out.');\n      }\n    })\n    .catch(err => console.log(err));\n  }\n\n  render() {\n    return (\n      <div className=\"App\">\n        <div>\n          <h1>Home Control</h1>\n          {this.state.user ? <h2>Welcome, {this.state.user['name']}</h2> : <h2>Welcome</h2>}\n          {\n            this.state.user\n            ? <ServerCtn servers={this.state.servers} showAuthForm={this.showAuthForm} />\n            : <p>You must log in first.</p>\n          }\n        </div>\n\n        {\n          this.state.modalDisplay\n          ? <div className=\"modal\">\n              <AuthForm authFormHeading={this.state.authFormHeading} actionCallback={this.state.modalAction} close={this.hideAuthForm} method=\"POST\" />\n            </div>\n          : null\n        }\n\n        {\n          this.state.user ? <LogBtn onClick={this.logOut} text={'Log Out'}/> : <LogBtn onClick={this.logIn} text={'Log In'}/>\n        }\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}